{
  "openapi": "3.0.0",
  "info": {
    "title": "Babyshower-Node",
    "description": "Api secundária para recursos da plataforma Babyshower com sistema de cadastro para empresas e anúncios, banco de dados para o chat, sistema de cadastro para administradores de sistema e upload de imagem no serviço AWS.",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:4000/api-documentation",
      "description": "teste"
    }
  ],
  "paths": {
    "/companies/login": {
      "post": {
        "description": "Dá acesso às empresas para que possam cadastrar anúncios na plataforma",
        "tags": ["Companies"],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Login-email"
                  },
                  {
                    "$ref": "#/components/schemas/Login-username"
                  },
                  {
                    "$ref": "#/components/schemas/Login-cnpj"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Chaves faltando ou valores de tipos incorretos."
          },
          "401": {
            "description": "Senha ou email invalidos",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidCredentialsError"
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "post": {
        "summary": "Cadastra uma empresa",
        "description": "Essa rota permite que a empresa se cadastre. Este cadastro pode ser realizado por um administrador do sistema da babyshower.",
        "tags": ["Companies"],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/NewCompany"
                  },
                  { "required": ["password"] },
                  {
                    "properties": {
                      "password": {
                        "type": "string",
                        "example": "123456"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "aplication/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NewCompany"
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "8556983d-938a-4354-b446-7ffe60f5e9af"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Chaves faltando ou valores de tipos incorretos."
          },
          "409": {
            "description": "Email, cnpj ou usernames já estão cadastrados no sistema"
          }
        }
      },
      "get": {
        "summary": "Retorna uma lista de empresas com informações de cadastro",
        "description": "Esta rota permite o acesso por somente administradores do sistema da babyshower. É possível paginar os resultados.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Página da listagem solicitada.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Número de itens da página solicitada.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "8"
            }
          }
        ],
        "security": [{ "bearerAuth": [] }],
        "tags": ["Companies"],
        "responses": {
          "200": {
            "description": "Lista de companies",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Company"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          }
        }
      }
    },

    "/companies/{id}": {
      "get": {
        "summary": "Retorna uma empresa cadastrada",
        "description": "Busca informações de uma empresa pelo seu id. Rota acessável também por um administrador de sistema da babyshower.",
        "tags": ["Companies"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id da empresa no formato uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "403": {
            "description": "Usuário tentando acessar informações de outro usuário sem ter poderes de administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyNotFoundError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza os dados cadastrados de uma empresa.",
        "description": "A empresa ou mesmo um administrador de sistema da babyshower pode fazer alterações nas informações cadastradas.",
        "tags": ["Companies"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id da empresa no formato uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/NewCompany"
                  },
                  { "required": ["password"] },
                  {
                    "properties": {
                      "password": {
                        "type": "string",
                        "example": "123456"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "403": {
            "description": "Usuário tentando acessar informações de outro usuário sem ter poderes de administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyNotFoundError"
                }
              }
            }
          },
          "409": {
            "description": "Email, cnpj ou usernames já estão cadastrados no sistema"
          }
        }
      },
      "delete": {
        "summary": "Exclui uma empresa cadastrada",
        "description": "A empresa ou um administrador do sistema da babyshower podem excluir o cadastro.",
        "tags": ["Companies"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id da empresa no formato uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "403": {
            "description": "Usuário tentando acessar informações de outro usuário sem ter poderes de administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyNotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/adverts": {
      "get": {
        "summary": "Retorna uma lista de anúncios",
        "description": "Esta rota traz uma lista de anúncios com dados não sensíveis que podem ser categorizados para utilização do front. Esta rota é paginada.",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Categoria a ser pesquisada.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Premium", "Platinum", "Black"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Página da listagem solicitada.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Número de itens da página solicitada.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "8"
            }
          }
        ],
        "tags": ["Adverts"],
        "responses": {
          "200": {
            "description": "Lista de adverts",
            "content": {
              "aplication/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "8556983d-938a-4354-b446-7ffe60f5e9af"
                      },
                      "image": {
                        "type": "string",
                        "example": "http://site.com/image.gif"
                      },
                      "linkAdvert": {
                        "type": "string",
                        "example": "http://site.com/advert"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adverts/byCompany/{id}": {
      "post": {
        "summary": "Cadastra um anúncio",
        "description": "Essa rota permite que a empresa cadastre uma anúncio para utilizar na plataforma baby shower. Este cadastro pode ser realizado por um administrador do sistema da babyshower.",
        "tags": ["Adverts"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id da empresa no formato uuid",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/NewAdvert"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "aplication/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Advert"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "403": {
            "description": "Usuário tentando acessar informações de outro usuário sem ter poderes de administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyNotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/adverts/{id}": {
      "get": {
        "summary": "Retorna um anúncio cadastrado.",
        "description": "Acessa um anúncio específo. Possuem acesso a empresa criadora do anúncio e os administradores do sistema da babyshower.",
        "tags": ["Adverts"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id do anúncio no formato uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advert"
                }
              }
            }
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "403": {
            "description": "Usuário tentando acessar informações de outro usuário sem ter poderes de administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertNotFoundError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza os dados do anúncio.",
        "description": "A empresa ou mesmo um administrador de sistema da babyshower pode fazer alterações nas informações cadastradas.",
        "tags": ["Adverts"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id do anúncio no formato uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAdvert"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "403": {
            "description": "Usuário tentando acessar informações de outro usuário sem ter poderes de administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertNotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Exclui um anúncio",
        "description": "A empresa ou um administrador do sistema da babyshower podem excluir o cadastro.",
        "tags": ["Adverts"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id do anúncio no formato uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "403": {
            "description": "Usuário tentando acessar informações de outro usuário sem ter poderes de administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertNotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/administrators/login": {
      "post": {
        "description": "Dá acesso aos administradores do sistema da babyshower",
        "tags": ["Administrators"],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Login-email"
                  },
                  {
                    "$ref": "#/components/schemas/Login-username"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "aplication/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Token"
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "8556983d-938a-4354-b446-7ffe60f5e9af"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Chaves faltando ou valores de tipos incorretos."
          },
          "401": {
            "description": "Senha ou email invalidos",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidCredentialsError"
                }
              }
            }
          }
        }
      }
    },
    "/administrators": {
      "post": {
        "summary": "Cadastra um admnistrator",
        "description": "Essa rota permite que um administrador cadastre outro administrador, por isso deve utilizada por um administrador autenticado.",
        "tags": ["Administrators"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/NewAdministrator"
                  },
                  { "required": ["password"] },
                  {
                    "properties": {
                      "password": {
                        "type": "string",
                        "example": "123456"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "aplication/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NewAdministrator"
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "8556983d-938a-4354-b446-7ffe60f5e9af"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "409": {
            "description": "Email, cnpj ou usernames já estão cadastrados no sistema"
          }
        }
      }
    },
    "/upload": {
      "post": {
        "summary": "Faz o upload de uma imagem na AWS",
        "description": "Essa rota permite o upload da imagem (formatos image/jpeg, image/jpg, image/png, image/gif com até 2MB) para o bucket da AWS retornando o link de acesso. Apenas uma imagem deve ser enviada por vez para somente um dos filenames a seguir.",
        "tags": ["Upload"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image-profile": {
                    "type": "string",
                    "format": "binary"
                  },
                  "image-product-1": {
                    "type": "string",
                    "format": "binary"
                  },
                  "image-product-2": {
                    "type": "string",
                    "format": "binary"
                  },
                  "image-product-3": {
                    "type": "string",
                    "format": "binary"
                  },
                  "image-product-4": {
                    "type": "string",
                    "format": "binary"
                  },
                  "image-advert": {
                    "type": "string",
                    "format": "binary"
                  },
                  "image-company": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "aplication/json": {
                "schema": {
                  "properties": {
                    "msgSuccess": {
                      "type": "string",
                      "example": "File sent successfully!"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://<enderecoBucketAmazon><idDoUsuárioOuCompany>-flagName/"
                    },
                    "key": {
                      "type": "string",
                      "example": "image-company@$2b$10$7Nr5OSrrmhdahMRq9L4J6.WgiB1g212KgrOJEsFP.qnehVGhC2nPW.png"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Tentativa de acesso sem token ou envio de mais de duas imagens ou tipo de arquivo não é imagem",
            "content": {
              "aplication/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InvalidFileError"
                    },
                    {
                      "$ref": "#/components/schemas/MissingTokenError"
                    },
                    {
                      "$ref": "#/components/schemas/OneFileError"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "500": {
            "description": "Filename não segue um dos names padronizados ou o tamanho do arquivo é superior a 2mb",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Faz a deleção de uma imagem na AWS",
        "description": "Essa rota permite a deleção da imagem arquivada no bucket da AWS. Somente administradores do sistema da babyshower ou o dono do cadastro podem fazer esta operação.",
        "tags": ["Upload"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "required": ["key"],
                "properties": {
                  "key": {
                    "type": "string",
                    "example": "image-profile@$2b$10$D.4cOntB6NpxZyEiBHksh.Xa9BPFiPcs6gP7duyggW1r4SNa2amoq"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido ou usuário não é administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "403": {
            "description": "Usuário tentando acessar informações de outro usuário sem ter poderes de administrador",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyNotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/chat": {
      "get": {
        "summary": "Retorna uma lista de chats abertos",
        "description": "Retorna a lista dos chats abertos em que o usuário logado faz parte.",
        "tags": ["Chat"],
        "responses": {
          "200": {
            "description": "Lista de chats",
            "content": {
              "aplication/json": {
                "schema": {
                  "properties": {
                    "chats": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Chat"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatNotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/chat/{id}": {
      "post": {
        "summary": "Envia um mensagem para outro usuário",
        "description": "Essa rota identifica o usuário da api principal (em python) pelo token e permite enviar uma mensagem para outro usuário desta mesma api externa.",
        "tags": ["Chat"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id do usuário para quem se pretende enviar a mensagem",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "aplication/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/NewMessage"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "aplication/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Message"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Tentativa de acesso sem token ou tipos de dados incorretos",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retorna as mensagens de um chat específico",
        "description": "Busca as mensagens através do id do chat, mas para isso o usuário logado precisa fazer parte da conversa.",
        "tags": ["Chat"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id do chat no formato uuid",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "aplication/json": {
                "schema": {
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Tentativa de acesso sem token",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingTokenError"
                }
              }
            }
          },
          "401": {
            "description": "Token informado é inválido",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidTokenError"
                }
              }
            }
          },
          "403": {
            "description": "Usuário tentando acessar sem ser participante",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoPermissionError"
                }
              }
            }
          },
          "404": {
            "description": "Não encontrado",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatNotFoundError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Login-email": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "email@mail.com",
            "uniqueItems": true
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "Login-cnpj": {
        "type": "object",
        "required": ["cnpj", "password"],
        "properties": {
          "cnpj": {
            "type": "string",
            "example": "000000000000015",
            "uniqueItems": true
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "Login-username": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "example": "username22",
            "uniqueItems": true
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "NewCompany": {
        "type": "object",
        "required": ["username", "email", "razaoSocial", "cnpj"],
        "properties": {
          "username": {
            "type": "string",
            "example": "capivarisa22",
            "uniqueItems": true
          },
          "email": {
            "type": "string",
            "example": "atendimento@capivarisa.com",
            "uniqueItems": true
          },
          "razaoSocial": {
            "type": "string",
            "example": "Capivari Sistemas Eletricos SA"
          },
          "cnpj": {
            "type": "string",
            "example": "00000000000009",
            "uniqueItems": true
          },
          "phone": {
            "type": "string",
            "example": "48992586848"
          }
        }
      },
      "NewAdvert": {
        "type": "object",
        "required": ["title", "apliedPrice", "description", "category"],
        "properties": {
          "title": {
            "type": "string",
            "example": "Campanha do dia dos pais"
          },
          "apliedPrice": {
            "type": "number",
            "example": 150.0
          },
          "description": {
            "type": "string",
            "example": "Capivari Sistemas Eletricos SA"
          },
          "category": {
            "type": "string",
            "example": "Premium"
          },
          "image": {
            "type": "string",
            "example": "http://site.com/image.gif"
          },
          "linkAdvert": {
            "type": "string",
            "example": "http://site.com/advert"
          }
        }
      },
      "NewAdministrator": {
        "type": "object",
        "required": ["username", "email"],
        "properties": {
          "username": {
            "type": "string",
            "example": "username22",
            "uniqueItems": true
          },
          "email": {
            "type": "string",
            "example": "email@mail.com",
            "uniqueItems": true
          }
        }
      },
      "NewMessage": {
        "type": "object",
        "required": ["message"],
        "properties": {
          "message": {
            "type": "string",
            "example": "Olá tudo bem? Eu vi seu anúncio no site."
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImIzOThjODJiLWUwMzMtNDJkMC1hMzhjLTVjYWE3ZThkNzk4OSIsImlhdCI6MTY1NDM0MzMyNiwiZXhwIjoxNjU0MzQ2OTI2fQ.FRl_xYRMkT992oOBp79Xae9B0fk4syRGBaH2T6xvicE"
          }
        }
      },
      "Company": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewAdvert"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "8556983d-938a-4354-b446-7ffe60f5e9af"
              },
              "companyId": {
                "type": "string",
                "format": "uuid",
                "example": "8556983d-938a-4354-b446-7ffe60f5e9af"
              }
            }
          }
        ]
      },
      "Advert": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewAdvert"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "8556983d-938a-4354-b446-7ffe60f5e9af"
              },
              "logoImage": {
                "type": "string",
                "example": "http://site.com.br/minha_image.jpg"
              },
              "adverts": {
                "type": "string",
                "example": "/adverts/byCompany/8556983d-938a-4354-b446-7ffe60f5e9af"
              }
            }
          }
        ]
      },
      "Message": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewMessage"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "8556983d-938a-4354-b446-7ffe60f5e9af"
              },
              "msgSuccess": {
                "type": "string",
                "example": "Message sent successfully!"
              },
              "message": {
                "type": "string",
                "example": "Olá tudo bem? Eu vi seu anúncio no site."
              },
              "createdAt": {
                "type": "string",
                "example": "Fri, 06 May 2022 12:49:26 GMT"
              },
              "readMessage": {
                "type": "boolean",
                "example": false
              },
              "parentId": {
                "type": "integer",
                "example": 5
              },
              "chat": {
                "type": "string",
                "example": "/chat/8556983d-938a-4354-b446-7ffe60f5e9af"
              }
            }
          }
        ]
      },
      "Chat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "8556983d-938a-4354-b446-7ffe60f5e9af"
          },
          "archived": {
            "type": "boolean",
            "default": false,
            "example": false,
            "deprecated": true
          },
          "parent_user": {
            "type": "integer",
            "example": 3465
          },
          "other_parent_user": {
            "type": "integer",
            "example": 3466
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          }
        }
      },
      "InvalidCredentialsError": {
        "type": "object",
        "properties": {
          "Error": {
            "type": "string",
            "example": "User not authorized"
          }
        }
      },
      "MissingTokenError": {
        "type": "object",
        "properties": {
          "Error": {
            "type": "string",
            "example": "Missing authorization token"
          }
        }
      },
      "InvalidFileError": {
        "type": "object",
        "properties": {
          "Error": {
            "type": "string",
            "example": "Invalid file type"
          }
        }
      },
      "OneFileError": {
        "type": "object",
        "properties": {
          "Error": {
            "type": "string",
            "example": "This route works for one file per each request"
          }
        }
      },
      "InternalError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "code": {
            "type": "number",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Internal server error"
          }
        }
      },
      "InvalidTokenError": {
        "type": "object",
        "properties": {
          "Error": {
            "type": "string",
            "example": "Invalid token"
          }
        }
      },
      "NoPermissionError": {
        "type": "object",
        "properties": {
          "Error": {
            "type": "string",
            "example": "You can't access information of another company"
          }
        }
      },
      "CompanyNotFoundError": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "example": "Company not found"
          }
        }
      },
      "AdvertNotFoundError": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "example": "Advert not found"
          }
        }
      },
      "ChatNotFoundError": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "example": "Chat not found"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
